
@misc{center_for_history_and_new_media_schnelleinstieg_nodate,
	title = {Schnelleinstieg},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}},
	annote = {Willkommen bei Zotero!Anhand des Schnelleinstiegs lässt sich das Sammeln, Handhaben, Zitieren und Teilen von Quellen erlernen.Vielen Dank, dass Sie Zotero installiert haben.}
}

@misc{wikipedia_.net_2017,
	title = {.net},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=.net&oldid=163867861},
	abstract = {.net ist eine generische Top-Level-Domain. Sie wurde am 1. Januar 1985 erstellt und war zunächst primär für Internet-Service-Provider bestimmt, wird heute aber branchenübergreifend verwendet. Die Abkürzung net steht für den englischen Begriff network, zu Deutsch Netzwerk.},
	language = {de},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = mar,
	year = {2017},
	note = {Page Version ID: 163867861},
	file = {Snapshot:files/5/index.html:text/html}
}

@book{center_for_history_and_new_media_schnelleinstieg_nodate-1,
	title = {Schnelleinstieg},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}}
}

@book{wikipedia_.net_2017-1,
	title = {.net},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=.net&oldid=163867861},
	abstract = {.net ist eine generische Top-Level-Domain. Sie wurde am 1. Januar 1985 erstellt und war zunächst primär für Internet-Service-Provider bestimmt, wird heute aber branchenübergreifend verwendet. Die Abkürzung net steht für den englischen Begriff network, zu Deutsch Netzwerk.},
	language = {de},
	author = {{Wikipedia}},
	month = mar,
	year = {2017},
	annote = {Page Version ID: 163867861},
	file = {Snapshot:files/9/index.html:text/html}
}

@misc{noauthor_c_nodate,
	title = {c\# - {Opening} new window in {MVVM} {WPF} - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/25845689/opening-new-window-in-mvvm-wpf},
	urldate = {2017-08-14},
	file = {Snapshot:files/12/opening-new-window-in-mvvm-wpf.html:text/html}
}

@misc{noauthor_c_nodate-1,
	title = {c\# - {How} to get {Name} by string {Value} from a .{NET} resource ({RESX}) file - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/16361685/how-to-get-name-by-string-value-from-a-net-resource-resx-file},
	urldate = {2017-08-20},
	file = {Snapshot:files/15/how-to-get-name-by-string-value-from-a-net-resource-resx-file.html:text/html}
}

@misc{noauthor_c_nodate-2,
	title = {c\# - {WPF} {Datagrid} {Get} {Selected} {Cell} {Value} - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/19225568/wpf-datagrid-get-selected-cell-value},
	urldate = {2017-08-20},
	file = {Snapshot:files/17/wpf-datagrid-get-selected-cell-value.html:text/html}
}

@misc{noauthor_data_nodate,
	title = {Data {Points} - {Why} {Does} {Entity} {Framework} {Reinsert} {Existing} {Objects} into {My} {Database}?},
	url = {https://msdn.microsoft.com/en-us/magazine/dn166926.aspx},
	urldate = {2017-08-20}
}

@misc{noauthor_mvvm_nodate,
	title = {{MVVM} - {IOC} {Containers} and {MVVM}},
	url = {https://msdn.microsoft.com/en-us/magazine/jj991965.aspx},
	urldate = {2017-08-25},
	file = {MVVM - IOC Containers and MVVM:files/21/jj991965.html:text/html}
}

@misc{noauthor_c_nodate-3,
	title = {c\# - {MVVM} {SimpleIoc}, how to use an interface when the interface implementation requires construction parameters - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/8850106/mvvm-simpleioc-how-to-use-an-interface-when-the-interface-implementation-requir},
	urldate = {2017-08-25},
	file = {Snapshot:files/23/mvvm-simpleioc-how-to-use-an-interface-when-the-interface-implementation-requir.html:text/html}
}

@misc{noauthor_entity_nodate,
	title = {entity framework - {EntityFramewok}: {How} to configure {Cascade}-{Delete} to nullify {Foreign} {Keys} - {Stack} {Overflow}},
	shorttitle = {entity framework - {EntityFramewok}},
	url = {https://stackoverflow.com/questions/15226312/entityframewok-how-to-configure-cascade-delete-to-nullify-foreign-keys},
	urldate = {2017-08-25},
	file = {Snapshot:files/25/entityframewok-how-to-configure-cascade-delete-to-nullify-foreign-keys.html:text/html}
}

@misc{noauthor_c_nodate-4,
	title = {c\# - {ICommand} - {RelayCommand} {CanExecute} method does not update button {IsEnabled} property - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/25904259/icommand-relaycommand-canexecute-method-does-not-update-button-isenabled-prope},
	urldate = {2017-08-26},
	file = {Snapshot:files/27/icommand-relaycommand-canexecute-method-does-not-update-button-isenabled-prope.html:text/html}
}

@misc{c-sharpcorner_charting_2017,
	title = {Charting in {WPF}},
	url = {http://www.c-sharpcorner.com/uploadfile/mahesh/charting-in-wpf/},
	abstract = {This tutorial demonstrates how to draw various charts including line chart, bar chart, column chart, area chart, scatter chart, and pie chart using WPF and C\#.},
	urldate = {2017-08-26},
	author = {c-sharpcorner},
	month = aug,
	year = {2017}
}

@misc{noauthor_validation_nodate,
	title = {Validation in {WPF} - {CodeProject}},
	url = {https://www.codeproject.com/Articles/863291/Validation-in-WPF},
	urldate = {2017-09-28},
	file = {Validation in WPF - CodeProject:files/31/Validation-in-WPF.html:text/html}
}

@misc{noauthor_wpf_nodate,
	title = {wpf - {How} to set a filter for a {DataGrid} {ItemSource} via {MVVM} - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/5809895/how-to-set-a-filter-for-a-datagrid-itemsource-via-mvvm},
	urldate = {2017-10-13},
	file = {Snapshot:files/34/how-to-set-a-filter-for-a-datagrid-itemsource-via-mvvm.html:text/html}
}

@misc{microsoft_collectionview.filter-eigenschaft_2017,
	title = {{CollectionView}.{Filter}-{Eigenschaft} ({System}.{Windows}.{Data})},
	url = {https://msdn.microsoft.com/de-de/library/system.windows.data.collectionview.filter(v=vs.100).aspx},
	urldate = {2017-10-13},
	author = {Microsoft},
	month = oct,
	year = {2017}
}

@misc{noauthor_visual_nodate,
	title = {visual studio 2015 - {MVVM} {Light} and {EventToCommand} gives {Invalid} {Markup} in {VS}2015 - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/32477728/mvvm-light-and-eventtocommand-gives-invalid-markup-in-vs2015},
	urldate = {2017-10-20},
	file = {Snapshot:files/38/mvvm-light-and-eventtocommand-gives-invalid-markup-in-vs2015.html:text/html}
}

@misc{noauthor_firing_nodate,
	title = {Firing a double click event from a {WPF} {ListView} item using {MVVM} - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/1035023/firing-a-double-click-event-from-a-wpf-listview-item-using-mvvm},
	urldate = {2017-10-28},
	file = {Snapshot:files/41/firing-a-double-click-event-from-a-wpf-listview-item-using-mvvm.html:text/html}
}

@misc{noauthor_c_nodate-5,
	title = {c\# - {Command} for {DoubleClick} on {ListView}'s {GridView} {Row} - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/28232902/command-for-doubleclick-on-listviews-gridview-row},
	urldate = {2017-10-28},
	file = {Snapshot:files/43/command-for-doubleclick-on-listviews-gridview-row.html:text/html}
}

@misc{noauthor_smtpclient.sendcompleted-ereignis_nodate,
	title = {{SmtpClient}.{SendCompleted}-{Ereignis} ({System}.{Net}.{Mail})},
	url = {https://msdn.microsoft.com/de-de/library/system.net.mail.smtpclient.sendcompleted(v=vs.110).aspx},
	urldate = {2017-11-24},
	file = {SmtpClient.SendCompleted-Ereignis (System.Net.Mail):files/46/system.net.mail.smtpclient.sendcompleted(v=vs.110).html:text/html}
}

@misc{noauthor_c_nodate-6,
	title = {c\# - {How} to confirm that mail has been delivered or not? - {Stack} {Overflow}},
	shorttitle = {c\# - {How} to confirm that mail has been delivered or not?},
	url = {https://stackoverflow.com/questions/7095104/how-to-confirm-that-mail-has-been-delivered-or-not},
	urldate = {2017-11-24},
	file = {Snapshot:files/48/how-to-confirm-that-mail-has-been-delivered-or-not.html:text/html}
}

@misc{noauthor_twilio_nodate,
	title = {Twilio {Console} - {Phone} {Numbers} {Restore}},
	url = {https://www.twilio.com/console/phone-numbers/restore},
	urldate = {2017-11-24}
}
@misc{twilio_sms_2018,
	title = {SMS Pricing for Text Messaging - Twilio},
	url = {https://www.twilio.com/sms/pricing/at},
	urldate = {2018-04-01},
	year={2018},
	month=apr
}

@misc{noauthor_entwickler_nodate,
	title = {Entwickler - {MessageBird}},
	url = {https://dashboard.messagebird.com/de-de/developers/settings},
	urldate = {2017-11-27},
	file = {Entwickler - MessageBird:files/52/settings.html:text/html}
}

@misc{noauthor_general_nodate,
	title = {General {FAQs}},
	url = {http://help.messagebird.com/frequently-asked-questions-faqs/general-faqs},
	urldate = {2017-11-28},
	file = {Snapshot:files/55/general-faqs.html:text/html}
}

@misc{microsoft_windows_2017,
	title = {Windows {Sorting} a {WPF} {ListView} by clicking on the header (2) - {Sort} {Direction} {Indicators} sample in {C}\#, {XAML} for {Visual} {Studio} 2012},
	url = {https://code.msdn.microsoft.com/windowsdesktop/Sorting-a-WPF-ListView-by-5769086f},
	urldate = {2017-12-09},
	author = {Microsoft},
	month = sep,
	year = {2017},
	file = {Windows Sorting a WPF ListView by clicking on the header (2) - Sort Direction Indicators sample in C#, XAML for Visual Studio 2012:files/58/Sorting-a-WPF-ListView-by-5769086f.html:text/html}
}

@misc{noauthor_create_2012,
	title = {Create a {Word} {Document} {From} a {Template} using c\# ({Mail} {Merge})},
	url = {https://vivekcek.wordpress.com/2012/08/25/create-a-word-document-from-a-template-using-c-mail-merge/},
	abstract = {I want to create a word document from a word template.The advantage of using template is, we can define a structure for the document and decorate the it with dynamic text. Software’s Used \&\#8…},
	urldate = {2017-12-10},
	journal = {A day with .Net},
	month = aug,
	year = {2012},
	file = {Snapshot:files/60/create-a-word-document-from-a-template-using-c-mail-merge.html:text/html}
}

@misc{noauthor_entity_2017,
	title = {Entity {Framework}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Entity_Framework&oldid=170788827},
	abstract = {Entity Framework, kurz auch EF, ist ein Framework für objektrelationale Abbildung (ORM). Es wurde von Microsoft entwickelt und dient dem ORM auf .NET-Objektstrukturen. Seine erste finale Version erschien als Teil des .NET Framework 3.5 (Service Pack 1) im Jahr 2008. Damals gehörte es noch zu ADO.NET und trug den Namen ADO.NET Entity Framework. Für die folgende Version, die die Nummer 4.0 trägt und 2010 als Teil des .NET Framework 4.0 erschien, wurde das Framework deutlich erweitert. Ab der Version 4.1 wird das Framework unabhängig vom .NET Framework entwickelt. Etwa seit dem Jahr 2012, in dem die Version 5.0 erschien und Microsoft das Framework quelloffen verfügbar machte, heißt es Entity Framework. Ab der Version 6.0, die 2013 erschien, gehört das Framework nicht mehr zum .NET Framework.Einhergehend mit .NET Core gibt es seit 2016 das separate Framework Entity Framework Core, das auch EF Core genannt wird.},
	language = {de},
	journal = {Wikipedia},
	month = nov,
	year = {2017},
	note = {Page Version ID: 170788827},
	file = {Snapshot:files/63/index.html:text/html}
}

@misc{wikipedia_objektrelationale_2016,
	title = {Objektrelationale {Abbildung}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Objektrelationale_Abbildung&oldid=161037938},
	abstract = {Objektrelationale Abbildung (englisch object-relational mapping, ORM) ist eine Technik der Softwareentwicklung, mit der ein in einer objektorientierten Programmiersprache geschriebenes Anwendungsprogramm seine Objekte in einer relationalen Datenbank ablegen kann. Dem Programm erscheint die Datenbank dann als objektorientierte Datenbank, was die Programmierung erleichtert. Implementiert wird diese Technik normalerweise mit Klassenbibliotheken, wie beispielsweise Entity Framework für .NET-Programmiersprachen, Hibernate für die Programmiersprache Java, Doctrine für PHP, SQLAlchemy für Python oder ActiveRecord für Ruby. Für Java gibt es auch eine standardisierte Schnittstelle, die Java Persistence API.},
	language = {de},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = dec,
	year = {2016},
	note = {Page Version ID: 161037938},
	file = {Snapshot:files/65/index.html:text/html}
}

@misc{noauthor_c_nodate-7,
	title = {c\# - {Interaction} {Triggers} in {Style} in {ResourceDictionary} {WPF} - {Stack} {Overflow}},
	url = {https://stackoverflow.com/questions/22321966/interaction-triggers-in-style-in-resourcedictionary-wpf},
	urldate = {2018-01-04},
	file = {Snapshot:files/68/interaction-triggers-in-style-in-resourcedictionary-wpf.html:text/html}
}

@misc{noauthor_windows_2017,
	title = {Windows {Presentation} {Foundation}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Windows_Presentation_Foundation&oldid=171261022},
	abstract = {Windows Presentation Foundation (kurz WPF), auch bekannt unter dem Codenamen Avalon, ist ein Grafik-Framework und Fenstersystem des .NET Frameworks von Microsoft. Es wird seit Windows Vista mit Windows ausgeliefert und lässt sich auf Windows XP (bis zur Version 4.0) und Windows Server 2003 nachinstallieren.
WPF ist eine 2006 neu eingeführte Klassenbibliothek, die zur Gestaltung von grafischen Benutzeroberflächen und zur Integration von Multimedia-Komponenten und Animationen dient. Sie vereint DirectX, Windows Forms, Adobe Flash, HTML und CSS.WPF stellt ein umfangreiches Modell für den Programmierer bereit. Dabei werden die Präsentation und die Geschäftslogik getrennt, dies wird vor allem durch die Auszeichnungssprache XAML (basierend auf XML) unterstützt. XAML beschreibt Oberflächen-Hierarchien deklarativ als XML-Code. WPF-Anwendungen können sowohl Desktop- als auch Web-Anwendungen sein und benutzen, wenn möglich, Hardwarebeschleunigung. Das Framework versucht, die verschiedenen Bereiche, die für die Präsentation wichtig sind (Benutzerschnittstelle, Zeichnen und Grafiken, Audio und Video, Dokumente, Typographie), zu vereinen.
Zudem gibt es mit Microsoft Silverlight (ehemals WPF/E) eine Plattform, die für das Web entwickelt wurde. Silverlight setzt dabei nicht auf das .NET-Framework auf, sondern benutzt eine reduzierte Version dessen. Silverlight kann mit XAML entwickelt werden.},
	language = {de},
	journal = {Wikipedia},
	month = nov,
	year = {2017},
	note = {Page Version ID: 171261022},
	file = {Snapshot:files/71/index.html:text/html}
}

@misc{messagebird_sms_2018,
	title = {{SMS}},
	url = {https://www.messagebird.com/de-de/sms},
	abstract = {Entdecken Sie die Leistung unserer SMS-API für Unternehmen und versenden Sie internationale SMS. Probieren Sie unser SMS-Gateway gratis aus und vernetzen Sie sich mit mehr als 220 Netzbetreibern.},
	language = {de-de},
	urldate = {2018-02-12},
	journal = {MessageBird},
	author = {MessageBird},
	month = feb,
	year = {2018},
	file = {Snapshot:files/74/sms.html:text/html}
}

@misc{noauthor_sms_nodate,
	title = {{SMS}},
	url = {https://www.messagebird.com/de-de/sms},
	abstract = {Entdecken Sie die Leistung unserer SMS-API für Unternehmen und versenden Sie internationale SMS. Probieren Sie unser SMS-Gateway gratis aus und vernetzen Sie sich mit mehr als 220 Netzbetreibern.},
	language = {de-de},
	urldate = {2018-02-12},
	journal = {MessageBird},
	file = {Snapshot:files/76/sms.html:text/html}
}

@misc{noauthor_sms_nodate-1,
	title = {{SMS}},
	url = {https://www.messagebird.com/de-de/sms},
	abstract = {Entdecken Sie die Leistung unserer SMS-API für Unternehmen und versenden Sie internationale SMS. Probieren Sie unser SMS-Gateway gratis aus und vernetzen Sie sich mit mehr als 220 Netzbetreibern.},
	language = {de-de},
	urldate = {2018-02-12},
	journal = {MessageBird},
	file = {Snapshot:files/78/sms.html:text/html}
}

@misc{gembox_microsoft_2018,
	title = {Microsoft {Office} {Interop} ({Word} {Automation}) in {C}\# - {GemBox}.{Document}},
	url = {/document/articles/c-sharp-microsoft-office-interop-word-automation},
	abstract = {Use of Microsoft Office Interop Word in C\# or VB.NET has a lot of issues explained here. Try out a superior alternative - GemBox.Document.},
	language = {en-US},
	urldate = {2018-02-13},
	journal = {Gembox},
	author = {GemBox},
	month = feb,
	year = {2018},
	file = {Snapshot:files/80/c-sharp-microsoft-office-interop-word-automation.html:text/html}
}

@misc{wikipedia_model_2017,
	title = {Model {View} {ViewModel}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Model_View_ViewModel&oldid=168867092},
	abstract = {Model View ViewModel (MVVM) ist ein Entwurfsmuster und eine Variante des Model-View-Controller-Musters (MVC). Es dient zur Trennung von Darstellung und Logik der Benutzerschnittstelle (UI). Es zielt auf moderne UI-Plattformen wie Windows Presentation Foundation (WPF), JavaFX, Silverlight und HTML5 ab, da ein Datenbindungsmechanismus erforderlich ist. Gegenüber dem MVC-Muster kann die Testbarkeit verbessert und der Implementierungsaufwand reduziert werden, da keine separaten Controller-Instanzen erforderlich sind. MVVM erlaubt eine Rollentrennung von UI-Designern und Entwicklern, wodurch Anwendungsschichten von verschiedenen Arbeitsgruppen entwickelt werden können. Designer können einen Fokus auf User Experience setzen und Entwickler die UI- und Geschäftslogik schreiben.},
	language = {de},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = sep,
	year = {2017},
	note = {Page Version ID: 168867092},
	file = {Snapshot:files/82/index.html:text/html}
}

@misc{it-visions_was_2018,
	title = {Was ist {WPF}? - {WPF} im {Vergleich} zu {Windows} {Forms}},
	url = {https://www.it-visions.de/lserver/artikeldetails.aspx?b=3718},
	urldate = {2018-02-15},
	author = {It-Visions},
	month = feb,
	year = {2018}
}

@misc{wikipedia_linq_2018,
	title = {{LINQ}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=LINQ&oldid=173859405},
	abstract = {LINQ (Abkürzung für Language Integrated Query; Aussprache Link) ist ein programmtechnisches Verfahren von Microsoft zum Zugriff auf Daten. LINQ wurde federführend von Erik Meijer entwickelt und erschien erstmals mit Visual Studio 2008.},
	language = {de},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = feb,
	year = {2018},
	note = {Page Version ID: 173859405},
	file = {Snapshot:files/86/index.html:text/html}
}

@misc{wikipedia_entity_2017,
	title = {Entity {Framework}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Entity_Framework&oldid=170788827},
	abstract = {Entity Framework, kurz auch EF, ist ein Framework für objektrelationale Abbildung (ORM). Es wurde von Microsoft entwickelt und dient dem ORM auf .NET-Objektstrukturen. Seine erste finale Version erschien als Teil des .NET Framework 3.5 (Service Pack 1) im Jahr 2008. Damals gehörte es noch zu ADO.NET und trug den Namen ADO.NET Entity Framework. Für die folgende Version, die die Nummer 4.0 trägt und 2010 als Teil des .NET Framework 4.0 erschien, wurde das Framework deutlich erweitert. Ab der Version 4.1 wird das Framework unabhängig vom .NET Framework entwickelt. Etwa seit dem Jahr 2012, in dem die Version 5.0 erschien und Microsoft das Framework quelloffen verfügbar machte, heißt es Entity Framework. Ab der Version 6.0, die 2013 erschien, gehört das Framework nicht mehr zum .NET Framework.Einhergehend mit .NET Core gibt es seit 2016 das separate Framework Entity Framework Core, das auch EF Core genannt wird.},
	language = {de},
	journal = {Wikipedia},
	author = {Wikipedia},
	month = nov,
	year = {2017},
	note = {Page Version ID: 170788827},
	file = {Snapshot:files/88/index.html:text/html}
}

@misc{codeproject_unit_2018,
	title = {Unit of {Work} {Design} {Pattern} - {CodeProject}},
	url = {https://www.codeproject.com/Articles/581487/Unit-of-Work-Design-Pattern},
	urldate = {2018-02-15},
	author = {CodeProject},
	month = feb,
	year={2018}
}

@book{center_for_history_and_new_media_schnelleinstieg_nodate-2,
	title = {Schnelleinstieg},
	url = {http://zotero.org/support/quick_start_guide},
	author = {{Center for History and New Media}}
}

@book{wikipedia_.net_2017-2,
	title = {.net},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=.net&oldid=163867861},
	abstract = {.net ist eine generische Top-Level-Domain. Sie wurde am 1. Januar 1985 erstellt und war zunächst primär für Internet-Service-Provider bestimmt, wird heute aber branchenübergreifend verwendet. Die Abkürzung net steht für den englischen Begriff network, zu Deutsch Netzwerk.},
	language = {de},
	author = {{Wikipedia}},
	month = mar,
	year = {2017},
	annote = {Page Version ID: 163867861},
	file = {Snapshot:files/94/index.html:text/html}
}

@book{wikipedia_.net_2017-3,
	title = {.net},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=.net&oldid=163867861},
	abstract = {.net ist eine generische Top-Level-Domain. Sie wurde am 1. Januar 1985 erstellt und war zunächst primär für Internet-Service-Provider bestimmt, wird heute aber branchenübergreifend verwendet. Die Abkürzung net steht für den englischen Begriff network, zu Deutsch Netzwerk.},
	language = {de},
	author = {{Wikipedia}},
	month = mar,
	year = {2017},
	annote = {Page Version ID: 163867861},
	file = {Snapshot:files/97/index.html:text/html}
}

@misc{schwichtenberg_vor-_2018,
	title = {Vor- und {Nachteile}},
	url = {https://www.heise.de/developer/artikel/Vor-und-Nachteile-228136.html},
	abstract = {Seit .NET 3.0 ist eine zentrale Frage bei der Entwicklung von .NET-Desktop-Anwendungen die Entscheidung zwischen der "alten" Windows Forms-Bibliothek und der neuen Windows Presentation Foundation (WPF).},
	language = {de},
	urldate = {2018-03-10},
	journal = {heise Developer},
	author = {Schwichtenberg, Holger},
	month = mar,
	year = {2018},
	file = {Snapshot:files/100/Vor-und-Nachteile-228136.html:text/html}
}

@misc{messagebird_preise_2018,
	title = {Preise},
	url = {https://www.messagebird.com/de-de/tarife},
	abstract = {Weder Startgebühren noch monatliche. Leichte Zahlung per Kreditkarte, Banküberweisung, PayPal, mehr. Melden Sie sich an, 15.000+ Firmen sind schon dabei.},
	language = {de-de},
	urldate = {2018-03-10},
	journal = {MessageBird},
	author = {MessageBird},
	month = mar,
	year = {2018},
	file = {Snapshot:files/102/tarife.html:text/html}
}

@misc{dotnetpattern_mvvm_2018,
	title = {{MVVM} {Light} {Messenger}},
	url = {http://dotnetpattern.com/mvvm-light-messenger},
	abstract = {MVVM Light Messenger is a class that allows exchange messages between objects. Messenger class is mainly used for sending messages between viewmodels.},
	language = {en-us},
	urldate = {2018-03-10},
	journal = {DotNetPattern.com},
	author = {dotnetpattern},
	month = mar,
	year = {2018},
	file = {Snapshot:files/104/mvvm-light-messenger.html:text/html}
}

@misc{microsoft_mvvm_2018,
	title = {{MVVM} - {Commands}, {RelayCommands} and {EventToCommand}},
	url = {https://msdn.microsoft.com/en-us/magazine/dn237302.aspx},
	urldate = {2018-03-10},
	author = {Microsoft},
	month = mar,
	year = {2018}
}

@misc{noauthor_mvvm_nodate-1,
	title = {{MVVM} {Light} {V}5.2 is live! {\textbar} {Laurent} {Bugnion} ({GalaSoft})},
	url = {http://blog.galasoft.ch/posts/2015/09/mvvm-light-v5-2-is-live/},
	language = {en-US},
	urldate = {2018-03-10},
	file = {Snapshot:files/107/mvvm-light-v5-2-is-live.html:text/html}
}

@misc{microsoft_linq_2018,
	title = {{LINQ} to {Entities}},
	url = {https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/ef/language-reference/linq-to-entities},
	language = {en-us},
	urldate = {2018-03-10},
	author = {Microsoft},
	month = mar,
	year = {2018},
	file = {Snapshot:files/109/linq-to-entities.html:text/html}
}

@misc{dofactory_.net_2018,
	title = {.{NET} {Design} {Patterns} in {C}\# and {VB}.{NET} - {Gang} of {Four} ({GOF}) - {doFactory}.com},
	url = {http://www.dofactory.com/net/design-patterns},
	urldate = {2018-03-11},
	author = {dofactory},
	month = mar,
	year = {2018}
}

@misc{c-sharpcorner_unit_2018,
	title = {Unit of {Work} in {Repository} {Pattern}},
	url = {https://www.c-sharpcorner.com/uploadfile/b1df45/unit-of-work-in-repository-pattern/},
	abstract = {Unit of Work is the concept related to the effective implementation of the repository pattern.},
	urldate = {2018-03-11},
	author = {csharpcorner},
	month = mar,
	year = {2018},
	file = {Snapshot:files/112/unit-of-work-in-repository-pattern.html:text/html}
}

@misc{microsoft_entity_connections_2018,
	title = {Entity {Framework} {Connections} and {Models}},
	url = {https://msdn.microsoft.com/en-us/library/jj592674(v=vs.113).aspx},
	urldate = {2018-03-11},
	author = {Microsoft},
	month = mar,
	year = {2018}
}

@misc{noauthor_wpf_nodate-1,
	title = {{WPF} {Commanding} - {Mouse} {Bindings}},
	url = {http://www.blackwasp.co.uk/WPFMouseBindings.aspx},
	urldate = {2018-03-28},
	file = {WPF Commanding - Mouse Bindings:files/116/WPFMouseBindings.html:text/html}
}

@misc{entityframework_tutorial_what_2018,
	title = {What is {Entity} {Framework}?},
	url = {http://www.entityframeworktutorial.net/what-is-entityframework.aspx},
	urldate = {2018-03-30},
	author = {EntityFrameWork Tutorial},
	month = mar,
	year = {2018},
	file = {What is Entity Framework?:files/119/what-is-entityframework.html:text/html}
}

@misc{noauthor_objektrelationale_2016,
	title = {Objektrelationale {Abbildung}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Objektrelationale_Abbildung&oldid=161037938},
	abstract = {Objektrelationale Abbildung (englisch object-relational mapping, ORM) ist eine Technik der Softwareentwicklung, mit der ein in einer objektorientierten Programmiersprache geschriebenes Anwendungsprogramm seine Objekte in einer relationalen Datenbank ablegen kann. Dem Programm erscheint die Datenbank dann als objektorientierte Datenbank, was die Programmierung erleichtert. Implementiert wird diese Technik normalerweise mit Klassenbibliotheken, wie beispielsweise Entity Framework für .NET-Programmiersprachen, Hibernate für die Programmiersprache Java, Doctrine für PHP, SQLAlchemy für Python oder ActiveRecord für Ruby. Für Java gibt es auch eine standardisierte Schnittstelle, die Java Persistence API.},
	language = {de},
	journal = {Wikipedia},
	month = dec,
	year = {2016},
	note = {Page Version ID: 161037938},
	file = {Snapshot:files/121/index.html:text/html}
}

@misc{microsoft_entity_2018,
	title = {Entity {Framework} {Database} {First}},
	url = {https://msdn.microsoft.com/en-us/library/jj206878(v=vs.113).aspx},
	urldate = {2018-03-31},
	author = {Microsoft},
	month = mar,
	year = {2018}
}

@misc{dotnetcurry_using_2018,
	title = {Using {MVVM} {Light} in {WPF} for {Model}-{View}-{ViewModel} implementation},
	url = {http://www.dotnetcurry.com/wpf/1037/mvvm-light-wpf-model-view-viewmodel},
	author = {dotnetcurry},
	month = mar,
	year = {2018}
}

@misc{noauthor_microsoft_nodate,
	title = {Microsoft {Office} {Interop} ({Word} {Automation}) in {C}\# - {GemBox}.{Document}},
	url = {/document/articles/c-sharp-microsoft-office-interop-word-automation},
	abstract = {Use of Microsoft Office Interop Word in C\# or VB.NET has a lot of issues explained here. Try out a superior alternative - GemBox.Document.},
	language = {en-US},
	urldate = {2018-03-31},
	journal = {Gembox},
	file = {Snapshot:files/126/c-sharp-microsoft-office-interop-word-automation.html:text/html}
}

@misc{nuget_system.windows.controls.datavisualization.toolkit_2018,
	title = {System.{Windows}.{Controls}.{DataVisualization}.{Toolkit} 4.0.0},
	url = {https://www.nuget.org/packages/System.Windows.Controls.DataVisualization.Toolkit/},
	abstract = {WPF Toolkit Data Visualization Controls},
	language = {en},
	urldate = {2018-03-31},
	author = {Nuget},
	month = jan,
	year = {2018},
	file = {Snapshot:files/128/System.Windows.Controls.DataVisualization.html:text/html}
}